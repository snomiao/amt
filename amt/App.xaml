<Application x:Class="YTY.amt.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:YTY.amt"
             StartupUri="MainWindow/MainWindow.xaml"
             ShutdownMode="OnMainWindowClose"
             Startup="Application_Startup"
             Exit="Application_Exit">
  <Application.Resources>

    <local:WorkshopWindow x:Key="WorkshopWindow"></local:WorkshopWindow>

    <ToolTip x:Key="ttpPortForwarding">
      <TextBlock TextWrapping="Wrap"
                 MaxWidth="200">联机优化可以使多人游戏显著减少卡顿问题，但是会导致不支持IPX、局域网联机游戏，如需开启需要参与玩家全部开启，请慎重使用。</TextBlock>
    </ToolTip>

    <Style x:Key="WindowGeneralStyle"
           TargetType="{x:Type Window}">
      <Setter Property="WindowStyle"
              Value="None"></Setter>
      <Setter Property="AllowsTransparency"
              Value="True"></Setter>
      <Setter Property="ResizeMode"
              Value="NoResize"></Setter>
      <Setter Property="BorderThickness"
              Value="1"></Setter>
      <Setter Property="BorderBrush"
              Value="DarkBlue"></Setter>
      <EventSetter Event="MouseLeftButtonDown"
                   Handler="Window_MouseLeftButtonDown"></EventSetter>
    </Style>

    <Style x:Key="ButtonBaseNoneStyle"
           TargetType="ButtonBase">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ButtonBase}">
            <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}">
              <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"></ContentPresenter>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="SnapsToDevicePixels"
              Value="True"></Setter>
      <Setter Property="VerticalContentAlignment"
              Value="Center"></Setter>
      <Setter Property="HorizontalContentAlignment"
              Value="Center"></Setter>
      <Setter Property="BorderThickness"
              Value="0"></Setter>
    </Style>

    <Style x:Key="ButtonSettingStyle"
           TargetType="{x:Type Button}">
      <Setter Property="Background"
              Value="Orange"></Setter>
      <Setter Property="Margin"
              Value="5,5"></Setter>
      <Setter Property="Padding"
              Value="10,5"></Setter>
      <Setter Property="FontSize"
              Value="16"></Setter>
      <Setter Property="Foreground"
              Value="Brown"></Setter>
      <Setter Property="RenderTransform">
        <Setter.Value>
          <ScaleTransform ScaleX="1"
                          ScaleY="1"></ScaleTransform>
        </Setter.Value>
      </Setter>
      <Setter Property="RenderTransformOrigin"
              Value="0.5 0.5"></Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="bdr"
                    CornerRadius="5"
                    Background="{TemplateBinding Background}"
                    Margin="{TemplateBinding Margin}"
                    Padding="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
              <ContentPresenter></ContentPresenter>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsEnabled"
                       Value="False">
                <Setter Property="Background"
                        Value="Gray"></Setter>
              </Trigger>
              <Trigger Property="IsMouseOver"
                       Value="True">
                <Trigger.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetName="bdr"
                                      Storyboard.TargetProperty="Background.Color"
                                      To="LemonChiffon"
                                      Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetName="bdr"
                                      Storyboard.TargetProperty="Background.Color"
                                      Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </Trigger.ExitActions>
              </Trigger>
              <Trigger Property="IsPressed"
                       Value="True">
                <Trigger.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                       To="0.95"
                                       Duration="0:0:0.15"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                       To="0.95"
                                       Duration="0:0:0.15"></DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                       Duration="0:0:0.1"></DoubleAnimation>
                      <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                       Duration="0:0:0.1"></DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </Trigger.ExitActions>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ButtonSystemStyle"
           BasedOn="{StaticResource ButtonBaseNoneStyle}"
           TargetType="{x:Type Button}">
      <Setter Property="Focusable"
              Value="False"></Setter>
      <Setter Property="Background"
              Value="Transparent"></Setter>
      <Setter Property="HorizontalAlignment"
              Value="Right"></Setter>
      <Setter Property="VerticalAlignment"
              Value="Top"></Setter>
    </Style>

    <Style x:Key="ButtonCloseStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ButtonSystemStyle}">
      <Setter Property="Command"
              Value="local:Commands.CloseWindow"></Setter>
      <Setter Property="CommandParameter"
              Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"></Setter>
      <Setter Property="ContentTemplate">
        <Setter.Value>
          <DataTemplate>
            <Canvas Width="30"
                    Height="30">
              <Line Canvas.Left="9"
                    Canvas.Top="9"
                    X2="12"
                    Y2="12"
                    StrokeThickness="3"
                    Stroke="White"></Line>
              <Line Canvas.Right="9"
                    Canvas.Top="9"
                    X2="-12"
                    Y2="12"
                    StrokeThickness="3"
                    Stroke="White"></Line>
            </Canvas>
          </DataTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <EventTrigger RoutedEvent="MouseEnter">
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation Storyboard.TargetProperty="Background.Color"
                              To="Red"
                              Duration="0:0:0.2"></ColorAnimation>
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="MouseLeave">
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation Storyboard.TargetProperty="Background.Color"
                              Duration="0:0:0.2"></ColorAnimation>
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="ButtonMinimizeStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ButtonSystemStyle}">
      <Setter Property="Command"
              Value="local:Commands.MinimizeWindow"></Setter>
      <Setter Property="CommandParameter"
              Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"></Setter>
      <Setter Property="ContentTemplate">
        <Setter.Value>
          <DataTemplate>
            <Canvas Width="30"
                    Height="30">
              <Line Canvas.Left="8"
                    Canvas.Top="20"
                    X2="12"
                    StrokeThickness="3"
                    Stroke="White"></Line>
            </Canvas>
          </DataTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <EventTrigger RoutedEvent="MouseEnter">
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation Storyboard.TargetProperty="Background.Color"
                              To="Orange"
                              Duration="0:0:0.2"></ColorAnimation>
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="MouseLeave">
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation Storyboard.TargetProperty="Background.Color"
                              Duration="0:0:0.2"></ColorAnimation>
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="ToggleButtonNoneStyle"
           TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}">
              <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"></ContentPresenter>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="VerticalContentAlignment"
              Value="Center"></Setter>
      <Setter Property="HorizontalContentAlignment"
              Value="Center"></Setter>
      <Setter Property="BorderThickness"
              Value="0"></Setter>
    </Style>

    <Style x:Key="ToggleButtonSettingStyle"
           TargetType="{x:Type ToggleButton}">
      <Setter Property="Background"
              Value="Orange"></Setter>
      <Setter Property="Margin"
              Value="5,2"></Setter>
      <Setter Property="Padding"
              Value="10,5"></Setter>
      <Setter Property="FontSize"
              Value="16"></Setter>
      <Setter Property="Foreground"
              Value="Brown"></Setter>
      <Setter Property="BorderBrush"
              Value="Transparent"></Setter>
      <Setter Property="BorderThickness"
              Value="2"></Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border x:Name="bdr"
                    CornerRadius="5"
                    Background="{TemplateBinding Background}"
                    Margin="{TemplateBinding Margin}"
                    Padding="{TemplateBinding Padding}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
              <ContentPresenter Margin="1"></ContentPresenter>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver"
                       Value="True">
                <Trigger.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetName="bdr"
                                      Storyboard.TargetProperty="Background.Color"
                                      To="LemonChiffon"
                                      Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetName="bdr"
                                      Storyboard.TargetProperty="Background.Color"
                                      Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </Trigger.ExitActions>
              </Trigger>
              <Trigger Property="IsChecked"
                       Value="True">
                <Trigger.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                      To="Red"
                                      Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                      Duration="0:0:0.2"></ColorAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </Trigger.ExitActions>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ToggleButtonOnOffStyle"
           TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Grid Width="80"
                  Height="40"
                  Margin="{TemplateBinding Margin}">
              <Rectangle x:Name="OuterRect"
                         RadiusX="8"
                         RadiusY="6"
                         Fill="Orange"></Rectangle>
              <Rectangle x:Name="InnerRect"
                         Margin="3"
                         RadiusX="6"
                         RadiusY="4"
                         Stroke="Brown"
                         StrokeThickness="2"></Rectangle>
              <Border x:Name="bdr"
                      HorizontalAlignment="Left"
                      Margin="55,0,0,0"
                      Width="25"
                      CornerRadius="0,5,5,0"
                      Background="Brown"></Border>
              <TextBlock x:Name="txb"
                         Text="开启"
                         FontSize="18"
                         Foreground="Brown"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Margin="-10,0,0,0"></TextBlock>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsChecked"
                       Value="False">
                <Setter TargetName="txb"
                        Property="Text"
                        Value="关闭"></Setter>
                <Setter TargetName="bdr"
                        Property="CornerRadius"
                        Value="5,0,0,5"></Setter>
                <Trigger.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ThicknessAnimation Storyboard.TargetName="bdr"
                                          Storyboard.TargetProperty="Margin"
                                          To="0"
                                          Duration="0:0:0.2"></ThicknessAnimation>
                      <ColorAnimation Storyboard.TargetName="OuterRect"
                                      Storyboard.TargetProperty="Fill.Color"
                                      To="Gray"
                                      Duration="0:0:0.2"></ColorAnimation>
                      <ColorAnimation Storyboard.TargetName="bdr"
                                      Storyboard.TargetProperty="Background.Color"
                                      To="#434343"
                                      Duration="0:0:0.2"></ColorAnimation>
                      <ColorAnimation Storyboard.TargetName="InnerRect"
                                      Storyboard.TargetProperty="Stroke.Color"
                                      To="LightGray"
                                      Duration="0:0:0.2"></ColorAnimation>
                      <ColorAnimation Storyboard.TargetName="txb"
                                      Storyboard.TargetProperty="Foreground.Color"
                                      To="LightGray"
                                      Duration="0:0:0.2"></ColorAnimation>
                      <ThicknessAnimation Storyboard.TargetName="txb"
                                          Storyboard.TargetProperty="Margin"
                                          To="10,0,0,0"
                                          Duration="0:0:0.2"></ThicknessAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ThicknessAnimation Storyboard.TargetName="bdr"
                                          Storyboard.TargetProperty="Margin"
                                          Duration="0:0:0.2"></ThicknessAnimation>
                      <ColorAnimation Storyboard.TargetName="OuterRect"
                                      Storyboard.TargetProperty="Fill.Color"
                                      Duration="0:0:0.2"></ColorAnimation>
                      <ColorAnimation Storyboard.TargetName="bdr"
                                      Storyboard.TargetProperty="Background.Color"
                                      Duration="0:0:0.2"></ColorAnimation>
                      <ColorAnimation Storyboard.TargetName="InnerRect"
                                      Storyboard.TargetProperty="Stroke.Color"
                                      Duration="0:0:0.2"></ColorAnimation>
                      <ColorAnimation Storyboard.TargetName="txb"
                                      Storyboard.TargetProperty="Foreground.Color"
                                      Duration="0:0:0.2"></ColorAnimation>
                      <ThicknessAnimation Storyboard.TargetName="txb"
                                          Storyboard.TargetProperty="Margin"
                                          Duration="0:0:0.2"></ThicknessAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </Trigger.ExitActions>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}"
           x:Key="TabControlMainStyle">
      <Setter Property="BorderThickness"
              Value="0"></Setter>
      <Setter Property="Background"
              Value="Transparent"></Setter>
      <Style.Resources>
        <Style TargetType="{x:Type TabPanel}">
          <Setter Property="HorizontalAlignment"
                  Value="Center"></Setter>
        </Style>
        <Style TargetType="{x:Type TabItem }">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type TabItem }">
                <Border Margin="25,10"
                        Background="Transparent">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="auto"></ColumnDefinition>
                      <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Ellipse x:Name="elli"
                             Grid.Column="0"
                             Width="22"
                             Height="22"
                             StrokeThickness="1"
                             Stroke="Red"></Ellipse>
                    <TextBlock x:Name="txb"
                               Grid.Column="1"
                               Text="{TemplateBinding Property=Header}"
                               FontSize="14pt"
                               VerticalAlignment="Center"
                               Margin="8,0,0,0"
                               Foreground="Red"></TextBlock>
                  </Grid>
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver"
                           Value="True">
                    <Setter TargetName="elli"
                            Property="Fill"
                            Value="Red"></Setter>
                  </Trigger>
                  <Trigger Property="IsSelected"
                           Value="True">
                    <Setter TargetName="elli"
                            Property="Fill"
                            Value="blue"></Setter>
                    <Setter TargetName="elli"
                            Property="Stroke"
                            Value="blue"></Setter>
                    <Setter TargetName="txb"
                            Property="Foreground"
                            Value="blue"></Setter>
                  </Trigger>
                  <Trigger Property="IsEnabled"
                           Value="False">
                    <Setter TargetName="elli"
                            Property="Fill"
                            Value="Gray"></Setter>
                    <Setter TargetName="elli"
                            Property="Stroke"
                            Value="Gray"></Setter>
                    <Setter TargetName="txb"
                            Property="Foreground"
                            Value="Gray"></Setter>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        <Style TargetType="{x:Type Button}"
               BasedOn="{StaticResource ButtonBaseNoneStyle}">
          <Setter Property="Margin"
                  Value="3,3"></Setter>
          <Setter Property="Background"
                  Value="Transparent"></Setter>
          <Setter Property="Width"
                  Value="100"></Setter>
          <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
              <Setter Property="Background"
                      Value="Red"></Setter>
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
              <Setter Property="Background"
                      Value="Pink"></Setter>
            </Trigger>
          </Style.Triggers>
          <Style.Resources>
          </Style.Resources>
        </Style>
      </Style.Resources>
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           x:Key="TextBlockHeaderStyle">
      <Setter Property="FontWeight"
              Value="Bold"></Setter>
      <Setter Property="FontSize"
              Value="16"></Setter>
      <Setter Property="Margin"
              Value="0"></Setter>
    </Style>

    <Style x:Key="TabControlSubStyle"
           TargetType="{x:Type TabControl}">
      <Setter Property="BorderThickness"
              Value="0"></Setter>
      <Setter Property="Background"
              Value="Transparent"></Setter>
      <Style.Resources>
        <Style TargetType="{x:Type TabItem }">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type TabItem }">
                <Border Margin="8,5"
                        Background="Transparent">
                  <TextBlock x:Name="txb"
                             Text="{TemplateBinding Property=Header}"
                             FontSize="18"
                             VerticalAlignment="Center"
                             Margin="8,0"></TextBlock>
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver"
                           Value="True">
                    <Setter TargetName="txb"
                            Property="FontWeight"
                            Value="Bold"></Setter>
                  </Trigger>
                  <Trigger Property="IsSelected"
                           Value="True">
                    <Setter TargetName="txb"
                            Property="FontWeight"
                            Value="Bold"></Setter>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        <Style TargetType="{x:Type Button}"
               BasedOn="{StaticResource ButtonSettingStyle}"></Style>
        <Style TargetType="{x:Type ToggleButton }"
               BasedOn="{StaticResource ToggleButtonSettingStyle}"></Style>
      </Style.Resources>
    </Style>

    <Style x:Key="ListBoxItemNoneStyle"
           TargetType="{x:Type ListBoxItem}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListBoxItem}">
            <ContentPresenter></ContentPresenter>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ListBoxNoneStyle"
           TargetType="{x:Type ListBox}">
      <Setter Property="ItemContainerStyle"
              Value="{StaticResource ListBoxItemNoneStyle}"></Setter>
      <Setter Property="BorderThickness"
              Value="0"></Setter>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <WrapPanel IsItemsHost="True"></WrapPanel>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListBox}">
            <ItemsPresenter></ItemsPresenter>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    
    <FlowDocument x:Key="fdcFrontPageLoading">
      <Paragraph>首页加载中...</Paragraph>
    </FlowDocument>
    
    <FlowDocument x:Key="fdcFrontPageError">
      <Paragraph>首页加载错误</Paragraph>
    </FlowDocument>
  </Application.Resources>
</Application>
